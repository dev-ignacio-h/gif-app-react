{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","placeholder","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","toLowerCase","replace","l","toUpperCase","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"iMA8BeA,EA3BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KAgBzC,OACE,sBAAMC,SATa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,MAKhB,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAfjB,SAACP,GAExBF,EAAcE,EAAEQ,OAAOF,QAa6CG,YAAY,sB,QCNrEC,G,MAbK,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAK7B,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,S,uBCVHK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfN,EADe,iDACiCO,UACpDF,GAFmB,+DAIFG,MAAMR,GAJJ,cAIfS,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAXjB,kBAedY,GAfc,4CAAH,sDCsBLK,EAjBC,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECFN,SAACA,GAAc,IAAD,EACdtB,mBAAS,CACjC4B,KAAM,GACNO,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAexC,OATAC,qBAAU,WACNjB,EAAQC,GAAUiB,MAAK,SAACC,GACtBH,EAAS,CACPT,KAAMY,EACNL,SAAS,SAGd,CAACb,IAEGc,EDZ2BK,CAAanB,GAAvCa,EADwB,EACxBA,QAAeH,EADS,EACfJ,KAGjB,OAFAN,EAAWA,EAASoB,cAAcC,QAAQ,aAAa,SAAAC,GAAC,OAAIA,EAAEC,iBAG5D,qCACE,oBAAI3B,UAAU,oCAAd,SAAmDI,IAClDa,GAAW,mBAAGjB,UAAU,mCAAb,sBACZ,qBAAKA,UAAU,YAAf,SACGc,EAAOF,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIhB,aEWjB+B,EAtBM,WAAO,IAAD,EACW9C,mBAAS,CAAC,KADrB,mBAClB+C,EADkB,KACNhD,EADM,KAOzB,OACE,qCACE,oBAAImB,UAAU,QAAd,qBACA,cAAC,EAAD,CAAanB,cAAeA,IAC5B,uBAEA,6BACGgD,EAAWjB,KAAI,SAACR,GAAD,OACd,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCdxB0B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.f1ff46ba.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handeInputChange = (e) => {\r\n    // console.log(e.target.value);\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((cats) => [inputValue, ...cats])\r\n      setInputValue('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={inputValue} onChange={handeInputChange} placeholder=\"Buscar Gifs...\"/>\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;\r\n","import 'animate.css/animate.min.css'\r\n\r\nconst GifGridItem = ({id, title, url}) => {\r\n    // console.log(img);\r\n    // console.log(id)\r\n    // console.log(title)\r\n    // console.log(url)\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default GifGridItem;","export const getGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    category\r\n  )}&limit=12&api_key=Br7Gb6AcrEfll1eULoqVIYzzceq2m6JT`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url\r\n    };\r\n  });\r\n\r\n  return gifs;\r\n};\r\n","// import { useState, useEffect } from 'react';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nconst GifGrid = ({ category }) => {\r\n  const { loading, data: images } = useFetchGifs(category);\r\n  category = category.toLowerCase().replace(/(^|\\s)\\S/g, l => l.toUpperCase())\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n      {loading && <p className=\"animate__animated animate__flash\">Cargando</p>}\r\n      <div className=\"card-grid\">\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect(() => {\r\n      getGifs(category).then((imgs) => {\r\n        setState({\r\n          data: imgs,\r\n          loading: false\r\n        });\r\n      });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n  const [categories, setCategories] = useState(['']);\r\n\r\n  // const handleAdd = () => {\r\n  //   // setCategories([...categories, 'test-add'])\r\n  //   setCategories(cats => [...cats, 'test-add'])\r\n  // }\r\n  return (\r\n    <>\r\n      <h2 className=\"title\">Gif App</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n      {/* <button onClick={handleAdd}>Agregar</button> */}\r\n      <ol>\r\n        {categories.map((category) => (\r\n          <GifGrid key={category} category={category} />\r\n        ))}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}